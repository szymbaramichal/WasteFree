name: Build and Push UI Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: cd UI && npm ci

      - name: Build UI
        run: cd UI && npm run build --if-present

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wastefree-ui:latest -f UI/Dockerfile UI

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/wastefree-ui:latest

      - name: Deploy API over SSH
        uses: appleboy/ssh-action@v1
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script_stop: true
          envs: DOCKERHUB_USERNAME
          script: |
            set -euo pipefail

            U=$(printf "%s" "${DOCKERHUB_USERNAME}" | tr -d '\r\n' | tr '[:upper:]' '[:lower:]')
            if [ -z "$U" ]; then
              echo "::error::DOCKERHUB_USERNAME is empty"
              exit 1
            fi
            IMAGE="${U}/wastefree-ui:latest"
            echo "Using IMAGE=${IMAGE}"

            # zatrzymaj i usuń stary kontener, jeśli istnieje
            docker stop wastefree-ui || true
            docker rm wastefree-ui || true

            docker pull "$IMAGE"
            docker run -d --name wastefree-ui -p 80:80 "$IMAGE"
            docker image prune -f || true