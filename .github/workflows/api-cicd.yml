name: Build and Push API Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'API/**'
  pull_request:
    branches:
      - main
    paths:
      - 'API/**'

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore API/WasteFree.sln

      - name: Build API
        run: dotnet build API/WasteFree.sln --configuration Release --no-restore

      - name: Publish API
        run: dotnet publish API/WasteFree.App/WasteFree.App.csproj --configuration Release --output ./publish

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wastefree-api:latest -f API/Dockerfile ./API

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/wastefree-api:latest

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Start ssh agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy API on remote host
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          HOST: ${{ secrets.DEPLOY_HOST }}
          USER: ${{ secrets.DEPLOY_USER }}
          PORT: ${{ secrets.DEPLOY_PORT }}
        run: |
          ssh -p ${PORT:-22} $USER@$HOST << 'EOF'
          set -e
          docker pull $DOCKERHUB_USERNAME/wastefree-api:latest
          docker rm -f wastefree-api || true
          docker run -d --name wastefree-api --restart=always -p 8080:8080 -e ASPNETCORE_ENVIRONMENT=Production $DOCKERHUB_USERNAME/wastefree-api:latest
          # Optional cleanup of dangling images
          docker image prune -f || true
          EOF
